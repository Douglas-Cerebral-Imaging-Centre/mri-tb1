#!/bin/bash
#
# ARG_POSITIONAL_SINGLE([low_angle_volume],[Nifti image acquired with the lower excitation flip angle α])
# ARG_POSITIONAL_SINGLE([high_angle_volume],[Nifti image acquired with the higher excitation flip angle 2α])
# ARG_POSITIONAL_SINGLE([output_filename],[Nifti file to save the B1 map to (overwritten)])
# ARG_OPTIONAL_SINGLE([excitation_flip_angle],[a],[Lowest excitation flip angle (α)],[60])

# ARG_HELP([Compute transmit-B1 (B1+) map based on the double angle method. Specific to the acquisition scheme where the first volume is acquired with excitation/refocusing flip angles of (α, 180), and the second with (2α, 180). See Boudreau et al., 2017 (https://onlinelibrary.wiley.com/doi/abs/10.1002/jmri.25692).])
# ARGBASH_GO()
# needed because of Argbash --> m4_ignore([
### START OF CODE GENERATED BY Argbash v2.10.0 one line above ###
# Argbash is a bash code generator used to get arguments parsing right.
# Argbash is FREE SOFTWARE, see https://argbash.dev for more info


die()
{
	local _ret="${2:-1}"
	test "${_PRINT_HELP:-no}" = yes && print_help >&2
	echo "$1" >&2
	exit "${_ret}"
}


begins_with_short_option()
{
	local first_option all_short_options='ah'
	first_option="${1:0:1}"
	test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}

# THE DEFAULTS INITIALIZATION - POSITIONALS
_positionals=()
# THE DEFAULTS INITIALIZATION - OPTIONALS
_arg_excitation_flip_angle="60"


print_help()
{
	printf '%s\n' "Compute transmit-B1 (B1+) map based on the double angle method. Specific to the acquisition scheme where the first volume is acquired with excitation/refocusing flip angles of (α, 180), and the second with (2α, 180). See Boudreau et al., 2017 (https://onlinelibrary.wiley.com/doi/abs/10.1002/jmri.25692)."
	printf 'Usage: %s [-a|--excitation_flip_angle <arg>] [-h|--help] <low_angle_volume> <high_angle_volume> <output_filename>\n' "$0"
	printf '\t%s\n' "<low_angle_volume>: Nifti image acquired with the lower excitation flip angle α"
	printf '\t%s\n' "<high_angle_volume>: Nifti image acquired with the higher excitation flip angle 2α"
	printf '\t%s\n' "<output_filename>: Nifti file to save the B1 map to (overwritten)"
	printf '\t%s\n' "-a, --excitation_flip_angle: Lowest excitation flip angle (α) (default: '60')"
	printf '\t%s\n' "-h, --help: Prints help"
}


parse_commandline()
{
	_positionals_count=0
	while test $# -gt 0
	do
		_key="$1"
		case "$_key" in
			-a|--excitation_flip_angle)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_excitation_flip_angle="$2"
				shift
				;;
			--excitation_flip_angle=*)
				_arg_excitation_flip_angle="${_key##--excitation_flip_angle=}"
				;;
			-a*)
				_arg_excitation_flip_angle="${_key##-a}"
				;;
			-h|--help)
				print_help
				exit 0
				;;
			-h*)
				print_help
				exit 0
				;;
			*)
				_last_positional="$1"
				_positionals+=("$_last_positional")
				_positionals_count=$((_positionals_count + 1))
				;;
		esac
		shift
	done
}


handle_passed_args_count()
{
	local _required_args_string="'low_angle_volume', 'high_angle_volume' and 'output_filename'"
	test "${_positionals_count}" -ge 3 || _PRINT_HELP=yes die "FATAL ERROR: Not enough positional arguments - we require exactly 3 (namely: $_required_args_string), but got only ${_positionals_count}." 1
	test "${_positionals_count}" -le 3 || _PRINT_HELP=yes die "FATAL ERROR: There were spurious positional arguments --- we expect exactly 3 (namely: $_required_args_string), but got ${_positionals_count} (the last one was: '${_last_positional}')." 1
}


assign_positional_args()
{
	local _positional_name _shift_for=$1
	_positional_names="_arg_low_angle_volume _arg_high_angle_volume _arg_output_filename "

	shift "$_shift_for"
	for _positional_name in ${_positional_names}
	do
		test $# -gt 0 || break
		eval "$_positional_name=\${1}" || die "Error during argument parsing, possibly an Argbash bug." 1
		shift
	done
}

parse_commandline "$@"
handle_passed_args_count
assign_positional_args 1 "${_positionals[@]}"

# OTHER STUFF GENERATED BY Argbash

### END OF CODE GENERATED BY Argbash (sortof) ### ])
# [ <-- needed because of Argbash


#! /bin/bash
set -euo pipefail
IFS=$'\n\t'

# Compute the B1 map
fslmaths ${_arg_high_angle_volume} -div ${_arg_low_angle_volume} -div 2 -acos -div ${_arg_excitation_flip_angle} ${_arg_output_filename}

# ] <-- needed because of Argbash
